repos:
  # Reformatte le code Python selon les conventions PEP 8 avec Black
  - repo: https://github.com/psf/black
    rev: 24.10.0 # Vérifie que c'est la version stable la plus récente
    hooks:
      - id: black
        language_version: python3
        args:
          - --line-length
          - "85"

  # Organise les imports Python selon les conventions PEP 8, compatible avec Black
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2 # Assure-toi que c'est bien la dernière version stable compatible
    hooks:
      - id: isort
        args: ["--profile", "black"] # Profile Black pour éviter les conflits de formatage

  # # Formate les fichiers front-end comme HTML et JavaScript avec Prettier
  # - repo: https://github.com/pre-commit/mirrors-prettier
  #   rev: v2.3.2 # Met à jour si une version plus récente est compatible
  #   hooks:
  #     - id: prettier

  # Divers hooks utiles de pre-commit-hooks pour la maintenance du code
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace # Supprime les espaces en fin de ligne
      - id: end-of-file-fixer # Ajoute une ligne vide en fin de fichier si elle manque
      - id: detect-private-key # Détecte les clés privées accidentellement ajoutées au dépôt
      - id: debug-statements # Vérifie l'absence de 'print' et 'pdb' (utiles pour le nettoyage du code)

  # Flake8 pour le linting Python, afin de détecter des erreurs de syntaxe et de style
  - repo: https://github.com/PyCQA/flake8
    rev: 7.1.1 # Mets à jour vers la version stable la plus récente si possible
    hooks:
      - id: flake8
        args:
          - --max-line-length=85

  # Vérification des dépendances Python avec safety pour identifier les vulnérabilités de sécurité
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.3
    hooks:
      - id: python-safety-dependencies-check
        args: ["--ignore=66963", "requirements.txt"] # '--ignore=66963' ignore une vulnérabilité spécifique dans les dépendances
