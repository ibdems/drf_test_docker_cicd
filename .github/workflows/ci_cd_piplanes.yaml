# Nom de la pipeline
name: Task CI/CD Pipeline

# Ecouter des evenements
on:
  # Quand on fait pour un  push dans toutes les branches
  push:
    branches:
      - "*"
  # Quand on fait un pull_request
  pull_request:
    branches:
      - "*"

# Les activites a faire dans la piplene
jobs:
  # 1er job verifier le sytaxe du code
  check_syntaxe:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check lint code with flake8
        run: |
          pip install flake8
          flake8 . --max-line-length=85

  test:
    runs-on: ubuntu-latest
    needs: check_syntaxe
    services:
      postgres:
        image: postgres:15.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgre
          POSTGRES_DB: task_test
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          make install_dev
      - name: Run tests
        run: make test

  build:
    name: build & Push
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: action/checkout@v2
      - name: login to docker hub
        env:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
        run: docker login -u $username -p $password
      - name: build the docker image
        run: docker build . -t devibrahima/task-essaie:latest
      - name: Push image in registre
        run: docker push devibrahima/task-essaie:latest
